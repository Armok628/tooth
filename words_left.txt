(incomplete)

The following section is taken (almost) directly from
https://forth-standard.org/standard/core
with annotations based on their implementation status in the project.

I may discover more things that I deem necessary to include.
They'll be placed in the bottom list.

This list is obviously subject to change.

	Core words

!				implemented in assembly
#			(???)	unplanned as of yet
#>			(???)	unplanned as of yet
#S			(???)	unplanned as of yet
'				implemented in assembly
(				implemented by proxy, see _WORD (could be Forth)
*				implemented in assembly
*/				planned in Forth
*/MOD				planned in Forth
+				implemented in assembly
+!				planned in Forth
+LOOP				planned in Forth
,			(???)	implemented in assembly (could be Forth : , HERE ! 8 ALLOT ; )
-				implemented in assembly
.			(???)	planned in Forth
."			(???)	planned in Forth
/				planned in Forth
/MOD				implemented in assembly
0<				planned in Forth
0=				planned in Forth
1+				planned in Forth
1-				planned in Forth
2!			(???)	debatable necessitude
2*			(???)	debatable necessitude
2/			(???)	debatable necessitude
2@			(???)	debatable necessitude
2DROP			(???)	debatable necessitude
2DUP			(???)	debatable necessitude
2OVER			(???)	debatable necessitude
2SWAP			(???)	debatable necessitude
:				planned in Forth (hand-compiled)
;				planned in Forth (hand-compiled)
<				implemented in assembly
<#			(???)	unplanned as of yet
=				implemented in assembly
>				implemented in assembly
>BODY			(???)	planned in Forth
>IN				implemented in assembly (as constant)
>NUMBER			(???)	planned in Forth
>R				implemented in assembly
?DUP				planned in Forth
@				implemented in assembly
ABORT				planned in Forth ( : ABORT S0 RSP! QUIT ; )
ABORT"				planned in Forth
ABS			(???)	planned in Forth
ACCEPT			(???)	planned in Forth
ALIGN				planned in Forth ( : HERE DUP ALIGNED - ALLOT ; )
ALIGNED				planned in Forth ( : ALIGNED 1- 7 INVERT AND 8 + ; )
ALLOT				implemented in assembly
AND				implemented in assembly
BASE			(???)	planned in Forth
BEGIN			(???)	debatable necessitude
BL				implemented in assembly (constant)
C!				implemented in assembly
C,				implemented in assembly
C@				implemented in assembly
CELL+				planned in Forth ( : CELL+ 1+ ; )
CELLS				planned in Forth
CHAR				planned in Forth (see KEY)
CHAR+				planned in Forth
CHARS				planned in Forth
CONSTANT			planned in Forth
COUNT				planned in Forth
CR				planned in Forth
CREATE			(???)	planned in Forth
DECIMAL				planned in Forth
DEPTH				planned in Forth ( : DEPTH S0 RSP@ - 3 RSHIFT ; )
DO				planned in Forth
DOES>				planned in Forth
DROP				implemented in assembly
DUP				implemented in assembly
ELSE				planned in Forth
EMIT				implemented in assembly
ENVIRONMENT?		(???)	debatable necessitude
EVALUATE			implemented in assembly (possible in Forth with more variables)
EXECUTE				implemented in assembly
EXIT				implemented in assembly
FILL			(???)	planned in Forth (better as `rep stosb`?)
FIND				implemented in assembly
FM/MOD			(???)	debatable necessitude
HERE				implemented in assembly (as variable)
HOLD			(???)	unplanned as of yet
I				planned in Forth
IF				planned in Forth
IMMEDIATE			planned in Forth
INVERT				implemented in assembly
J				planned in Forth
KEY				implemented in assembly
LEAVE				planned in Forth
LITERAL				implemented in assembly?
LOOP				planned in Forth
LSHIFT				implemented in assembly
M*			(???)	debatable necessitude
MAX				planned in Forth
MIN				planned in Forth
MOD				planned in Forth
MOVE				planned in Forth
NEGATE				implemented in assembly
OR				implemented in assembly
OVER				implemented in assembly
POSTPONE		(???)	planned in Forth
QUIT				planned in Forth
R>				implemented in assembly
R@				implemented in assembly
RECURSE				planned in Forth
REPEAT				planned in Forth
ROT				implemented in assembly
RSHIFT				implemented in assembly
S"				planned in Forth
S>D			(???)	debatable necessitude
SIGN			(???)	unplanned as of yet
SM/REM			(???)	debatable necessitude
SOURCE				implemented in assembly
SPACE				planned in Forth
SPACES				planned in Forth
STATE			(???)	planned in Forth (as variable)
SWAP				implemented in assembly
THEN				planned in Forth
TYPE				planned in Forth
U.			(???)	planned in Forth (depends on .)
U<				implemented in assembly
UM*			(???)	debatable necessitude
UM/MOD			(???)	debatable necessitude
UNLOOP				planned in Forth
UNTIL				planned in Forth
VARIABLE			planned in Forth
WHILE				planned in Forth
WORD				implemented in assembly
XOR				implemented in assembly
[			(???)	planned in Forth (depends on STATE)
[']				planned in Forth
[CHAR]				planned in Forth
]			(???)	planned in Forth (depends on STATE)

	Core extension words

.(				planned in Forth
.R				planned in Forth
0<>				planned in Forth
0>				planned in Forth
2>R			(???)	debatable necessitude (perhaps for compatibility)
2R>			(???)	debatable necessitude (perhaps for compatibility)
2R@			(???)	debatable necessitude (perhaps for compatibility)
:NONAME				planned in Forth
<>				implemented in assembly
?DO			(???)	planned in Forth
ACTION-OF		(???)	planned in Forth
AGAIN			(???)	planned in Forth
BUFFER:				planned in Forth
C"				planned in Forth
CASE				planned in Forth
COMPILE,			planned in Forth (cognate with ,)
DEFER				planned in Forth
DEFER!				planned in Forth
DEFER@				planned in Forth
ENDCASE				planned in Forth
ENDOF				planned in Forth
ERASE				planned in Forth
FALSE				planned in Forth
HEX				planned in Forth
HOLDS			(???)	unplanned as of yet
IS				planned in Forth
MARKER				planned in Forth
NIP				planned in Forth
OF				planned in Forth
PAD				planned in Forth
PARSE			(???)	planned in Forth (better as `repne scasb`?)
PARSE-NAME		(???)	planned in Forth
PICK			(???)	planned in Forth (depends on ability to get pointer to TOS)
REFILL			(???)	unplanned as of yet
RESTORE-INPUT		(???)	unplanned as of yet
ROLL				planned in Forth
S\"			(???)	planned in Forth
SAVE-INPUT		(???)	unplanned as of yet
SOURCE-ID			implemented in assembly (indirect constant)
TO			(???)	unplanned as of yet
TRUE				planned in Forth
TUCK				planned in Forth
U.R				planned in Forth
U>				implemented in assembly
UNUSED				planned in Forth ( : UNUSED HERE SYS_BRK 0 SYSCALL1 - 3 RSHIFT ; )
VALUE				planned in Forth
WITHIN				planned in Forth
[COMPILE]			planned in Forth
\			(???)	planned in Forth (better as case of WORD?)

	Additional words

LATEST				implemented in assembly
INTERPRET			planned in Forth (hand-compiled)
SYSCALLn			implemented in assembly
NUMBER				implemented in assembly
